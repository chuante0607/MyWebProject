@model UCOMProject.Models.HolidayViewModel
@{
    ViewBag.Title = "Apply";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" id="app" v-cloak>
    <div class="row">
        <!--表單區-->
        <div class="col-lg-8">
            <div class=" o-hidden border-0 shadow-lg">
                <div class="card-body p-0">
                    <div class="row">
                        <div class="col">
                            <div class="p-5">
                                <div class="text-center">
                                    <h1 class="h4 mb-4">休假申請</h1>
                                </div>
                                <hr />
                                <form class="user" action="~/Holiday/Apply" method="post">
                                    <div class="form-group row">
                                        <input type="hidden" name="eid" value="@Model.employee.EId" />
                                        <div class="col-md-6">
                                            <input type="text" class="form-control form-control-user text-center" value="@Model.employee.EId @Model.employee.Name" disabled>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="text" class="form-control form-control-user text-center" value="@Model.employee.Branch  @Model.employee.Shift 班" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col">
                                            <input type="text"
                                                   class="form-control form-control-user text-center text-info"
                                                   v-model="title"
                                                   disabled required>
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <input type="text"
                                                   id="startDatepicker"
                                                   class="form-control form-control-user"
                                                   placeholder="開始日期"
                                                   readonly required>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="text"
                                                   id="endDatepicker"
                                                   class="form-control form-control-user"
                                                   placeholder="結束日期"
                                                   readonly required>
                                        </div>
                                    </div>
                                    <div class="form-group row" v-show="range">
                                        <div class="col">
                                            <input class="form-control form-control-user text-center text-info" :value="'休假總計：' + range + '天'" disabled>
                                            <input type="hidden" class="form-control form-control-user text-center text-danger" v-model="range" disabled required>
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col" v-if="remain >= 0">
                                            <div class="form-control form-control-user text-center text-bg-success">
                                                {{title}}剩餘：{{remain}}天
                                            </div>
                                        </div>
                                        <div class="col" v-else-if="remain < 0">
                                            <div class="form-control form-control-user text-center text-bg-danger">
                                                {{title}}天數不足({{remain}}天)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row" v-if="remain >= 0">
                                        <div class="col">
                                            <input type="text"
                                                   class="form-control form-control-user text-center"
                                                   placeholder="休假事由"
                                                   v-model="remark"
                                                   required>
                                        </div>
                                    </div>
                                    <div class="form-group row" v-show="title === '病假'">
                                        <div class="col">
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" id="customFile" @@change="handleFile" multiple>
                                                <label class="custom-file-label text-center" for="customFile">{{fileName}}</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col">
                                            <div type="submit" class="btn btn-primary btn-user btn-block" @@click="submit">送出</div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--拖放區-->
        <div class="col-lg-4">
            <div id="target" class="block text-center">
                <span class="h4" id="point">請將假別拖曳至此</span>
            </div>
            <hr />
            <!--假別儀錶板-->
            <div class="row" id="source_container">
                <div :id="'h' + holiday.id" class="col-xl-6 mb-3 ad" draggable="true" v-for="holiday in holidays" :key="holiday.id">
                    <div class="card shadow h-100 py-2" :class="'border-left-' + holiday.color">
                        <div class="card-body border-2">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <h4 class="text-center font-weight-bold mb-3" style="color:#000">
                                        {{holiday.title}}
                                    </h4>
                                    <div class="h5 mb-0 font-weight-bold text-gray-800 text-center text-info">
                                        <h4>
                                            <span class="badge badge-success" data-day="day">{{holiday.canUseDays}}&nbsp;天</span>
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Script{
    <script>
        moment.locale("zh-tw");
        moment().format("LT"); // 11:33
        moment().format("LTS"); // 11:33:14
        moment().format("L"); // 2023/01/28

        var selectYear = `${new Date().getFullYear()} : ${new Date().getFullYear()}`;

        $(function () {
            //拖曳設定
            let dragSources = document.querySelectorAll('[draggable="true"]');
            dragSources.forEach(item => {
                item.addEventListener('dragstart', myDragStart);
                item.addEventListener('dragend', myDragEnd);
            })
            var tragObj = null;
            //拖曳物件開始拖曳時事件
            function myDragStart(e) {
                tragObj = this;
                e.dataTransfer.setData('text/plain', e.target.id)
                this.classList.add('dragging');
            }
            //拖曳物件被拖曳時持續觸發事件
            function myDrag(e) {
                this.classList.add('dragging')
            }
            //拖曳物件結束時事件
            function myDragEnd(e) {
                this.classList.remove('dragging');
            }
            //拖曳的放置目標
            let target = document.querySelector('#target');
            target.addEventListener('drop', myDrop);
            target.addEventListener('dragenter', myDragenter);
            target.addEventListener('dragover', myDragover);
            target.addEventListener('dragleave', myDragleave);
            var activeObj = null;
            //拖曳物件進入範圍時觸發
            function myDragenter(e) {
                mycancelDefault(e);
                $('#point').remove();
                if ($('#target').children().length) {
                    let activeObj = $('#target').children(':first-child');
                    activeObj.addClass('col-xl-6');
                    activeObj.addClass('mb-3');
                    $('#source_container').append(activeObj);
                }
                this.classList.add('draghover');
            }
            //拖曳物件進入範圍時持續觸發
            function myDragover(e) {
                mycancelDefault(e);
            }
            //拖曳物件離開範圍時觸發
            function myDragleave(e) {
                mycancelDefault(e);
                if (activeObj == null) {
                    let point = '<span class="h4" id="point">請將假別拖曳至此</span>';
                    $('#target').prepend(point);
                    vm.title = '請拖曳假別';
                }
                else {
                    activeObj.removeClass('col-xl-6');
                    activeObj.classList.remove('mb-3');
                    $('#target').append(activeObj);
                }
                this.classList.remove('draghover');
            }
            //拖曳物件放置時觸發
            function myDrop(e) {
                mycancelDefault(e);
                let id = e.dataTransfer.getData('text/plain');
                let activeObj = document.querySelector(`#${id}`);
                let leaveDayStr = $(`#${id} [data-day="day"]`).text();
                this.classList.remove('draghover');
                activeObj.classList.remove('col-xl-6');
                activeObj.classList.remove('mb-3');
                e.target.appendChild(document.querySelector(`#${id}`));
                let title = document.querySelector(`#${id} h4`).innerText;
                vm.title = title;
            }
            // 元素預設行為是不能被放置拖曳物的，因此在拖曳對象出現在放置目標上時，取消預設行為，讓放置目標可以被放置
            function mycancelDefault(e) {
                e.preventDefault()
                e.stopPropagation()
                return false
            }

            //-------------------------------------------------------------------------------------------

            //日期選擇器 JQuery DatePicker
            //起始日期選單
            $("#startDatepicker").datepicker({
                changeMonth: true,
                dateFormat: "yy-mm-dd",
                dayNamesMin: ["日", "一", "二", "三", "四", "五", "六"],
                monthNamesShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                yearRange: selectYear,
                showAnim: "fade",
                beforeShowDay: vm.settingWorkDays,
            }).change(function () {
                let start = $(this).datepicker("getDate");
                let end = $("#endDatepicker").datepicker("option", "minDate", start).datepicker("getDate");
                if (start && end) {
                    vm.range = {start , end};
                }
            })

            //結束日期選單
            $("#endDatepicker").datepicker({
                changeMonth: true,
                dateFormat: "yy-mm-dd",
                dayNamesMin: ["日", "一", "二", "三", "四", "五", "六"],
                monthNamesShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                yearRange: selectYear,
                showAnim: "fade",
                beforeShowDay: vm.settingWorkDays,
            }).change(function () {
                let start = $('#startDatepicker').datepicker("getDate");
                let end = $("#endDatepicker").datepicker("getDate");
                if (start && end) {
                    vm.range = { start, end };
                }
            })

        });

        //Vue
        const vm = new Vue({
            el: '#app',
            data: {
                employee: {},
                holidays: {},
                startDate: '',
                endDate: '',
                rangeDate: [],
                title: '請拖曳假別',
                workDayOfYearByMonth: {},//日期選擇器初始資料
                hId:'',
                remark: '',
                files: null,
                fileName: '上傳證明',
                color,
            },
            mounted() {
                let data = @Html.Raw(ViewBag.vm);
                this.employee = data.employee;
                this.holidays = data.holidays;
                this.workDayOfYearByMonth = data.workDayOfYearByMonth;
                this.holidays.forEach((h,i) => {
                    this.$set(h, 'color', color[i]);
                })
            },
            computed: {
                //計算使用天數
                range: {
                    get() {
                        if (!this.startDate || !this.endDate) return
                        //計算選取範圍有幾天
                        let checkRange = (this.endDate - this.startDate) / (1000 * 60 * 60 * 24);
                        //在Date原型屬性添加addDays()方法
                        Date.prototype.addDays = function (days) {
                            this.setDate(this.getDate() + days);
                            return this;
                        }
                        let holidayRange = 0;
                        //rangeDate用來把請假期間(只有工作天)的詳細日期記錄起來
                        this.rangeDate = [];
                        this.rangeDate.push(moment(this.startDate).format('l'));
                        while (checkRange) {
                            //使用date物件的addDays方法取得休假範圍內的Date物件
                            let checkRangeDate = new Date(this.startDate).addDays(checkRange);
                            if (this.settingWorkDays(checkRangeDate)[0]) {
                                //rangeDate紀錄其他工作天
                                this.rangeDate.push(moment(checkRangeDate).format('l'));
                                holidayRange++;
                            }
                            checkRange--;
                        }
                        return holidayRange + 1;
                    },
                    set(value) {
                        this.startDate = value.start;
                        this.endDate = value.end;
                    }
                },
                //計算剩餘天數
                remain() {
                    if (!this.startDate || !this.endDate || this.title === '請拖曳假別') return
                    //獲取假別的資訊
                    let holidayInfo = this.holidays.filter(item => {
                        return item.title === this.title;
                    })[0];
                    this.hId = holidayInfo.id;
                    return holidayInfo.canUseDays - this.range;
                },
            },
            methods: {
                //datepicker的beforeShowDay初始化日期fun，員工的工作日時才可選擇，非工作日不能選(做2休2)
                settingWorkDays(date) {
                    let matchMonth = this.workDayOfYearByMonth[date.getMonth()];
                    //some只要一找到相符的值就跳出
                    let isWork = matchMonth.some(item => {
                        let workDate = new Date(item.workDate);
                        return workDate.valueOf() === date.valueOf() && item.shiftType === this.employee.shift;
                    })
                    return [isWork, '', ''];
                },
                //取得休假證明上傳資料
                handleFile(e) {
                    this.files = e.target.files;
                    this.fileName = this.files[0].name;
                    if (this.files.length > 1) {
                        this.fileName = `已選擇${this.files.length}筆檔案`;
                    }
                },
                submit() {
                    //表單驗證
                    if (this.validNG().result) {
                        wAlert(this.validNG().msg);
                        return;
                    }
                    //上傳檔案必須要使用FormData post方式
                    if (this.range && this.remain >= 0 && this.remark) {
                        var formData = new FormData();
                        formData.append('Eid', this.employee.eId);
                        formData.append('HId', this.hId);
                        formData.append('Title', this.title);
                        formData.append('BeginDate', moment(this.startDate).format("l"));
                        formData.append('EndDate', moment(this.endDate).format("l"));
                        formData.append('UsedDays', this.range);
                        formData.append('Remark', this.remark);
                        if (this.rangeDate) {
                            for (let i = 0; i < this.rangeDate.length; i++) {
                                formData.append(`RangeDateString[${i}]`, this.rangeDate[i]);
                            }
                        }
                        if (this.files) {
                            for (let i = 0; i < this.files.length; i++) {
                                formData.append('Files', this.files[i]);
                            }
                        }

                        $.ajax({
                            method: 'post',
                            url: 'http://localhost:51010/holiday/apply',
                            data: formData,
                            processData: false,  // formData 不將數據轉換為字符串
                            contentType: false,  // formData 不設置Content-Type請求頭
                            success: res => {
                                if (res.error) {
                                    console.log(res.payload);
                                    eAlert(res.msg);
                                } else {
                                    sAlert(res.msg)
                                    $(Swal.getConfirmButton()).click(function () {
                                        $('body').loading();
                                        setTimeout(function () {
                                            location.href = window.location.href;
                                        }, 1500)
                                    })
                                }
                            },
                            error: error => {
                                console.log('error' , error)
                            }
                        })
                    }
                },
                validNG() {
                    if (this.title === '請拖曳假別') {
                        return { result:true ,msg: "請選擇使用的假別"};
                    }
                    if (!this.startDate || !this.endDate) {
                        wAlert("日期未選擇完整")
                        return { result: true, msg: "日期未選擇完整" };
                    }
                    if (this.remain < 0) {
                        wAlert("假別天數不足，請重新確認")
                        return { result: true, msg: "假別天數不足，請重新確認" };
                    }
                    if (!this.remark.trim()) {
                        wAlert("請填寫休假事由")
                        return { result: true, msg: "請填寫休假事由" };
                    }
                    if (this.title === '病假') {
                        if (!this.files) {
                            wAlert("請附加休假證明")
                            return { result: true, msg: "請附加休假證明" };
                        }
                    } else {
                        this.files = null;
                        this.fileName = '上傳證明';
                        return { error: false };
                    }
                }
            }
        })
    </script>
}


@section Style{
    <style>
        .card:hover {
            border-color: yellow;
            cursor: pointer;
            transition: 0.5s;
        }

        input {
            text-align: center;
        }

        #startDatepicker, #endDatepicker {
            background-color: white;
            color: black;
        }

        body, .card, [draggable=true] {
            /*避免使用者選取拖曳物件的內容*/
            user-select: none;
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }

        .block {
            height: 180px;
            border: 1px dashed rgba(0,0,0,0.5);
        }

        .dragging {
            transition: 0.25s;
            border: initial;
        }

        .draghover {
            transition: 0.5s;
            background-color: wheat;
        }

        #target {
            display: flex;
            flex-direction: column;
            flex-wrap: nowrap;
            align-content: stretch;
            justify-content: space-around;
            z-index: 2;
            position: relative;
            z-index: 10;
        }

        #point {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: yellow;
        }

        .workday {
            background-color: cornflowerblue;
        }

        form.user .form-control-user, form.user .btn-user, .custom-file-label {
            font-size: 1rem;
            border-radius: inherit;
        }

        .form-control {
            height: inherit;
        }

        .container {
            margin-top: 5%;
        }
    </style>

}