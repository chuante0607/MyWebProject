@using UCOMProject.Methods;
@{
    ViewBag.Title = "每日員工出勤";
    var currentEmp = SessionEmp.CurrentEmp;

}
<div class="page-banner overlay-dark bg-image titleBackImg">
    <div class="banner-section">
        <div class="container text-center wow fadeInUp">
            <h1 class="font-weight-normal">每日員工出勤</h1>
        </div>
    </div>
</div>




<div id="app" v-cloak>



    <div class="back">
        <div class="btn-group" role="group" aria-label="Basic example" style="z-index:10">
            <a class="btn btn-warning" href="@Url.Action("Index" , "Schedule")">返回休假總覽</a>
        </div>
    </div>
    <br />
    <br />
    <hr />
    <div class="row">
        <div class="col">
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio"
                       id="customRadioInline1"
                       name="customRadioInline"
                       class="custom-control-input"
                       value="全顯示"
                       v-model="radioValue"
                       v-on:click="handleSearchValue">
                <label class="custom-control-label" for="customRadioInline1">全顯示</label>
            </div>
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio"
                       id="customRadioInline2"
                       name="customRadioInline"
                       class="custom-control-input"
                       value="只顯示出勤"
                       v-model="radioValue"
                       v-on:click="handleSearchValue">
                <label class="custom-control-label" for="customRadioInline2">只顯示出勤</label>
            </div>
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio"
                       id="customRadioInline3"
                       name="customRadioInline"
                       class="custom-control-input"
                       value="只顯示休假"
                       v-model="radioValue"
                       v-on:click="handleSearchValue">
                <label class="custom-control-label" for="customRadioInline3">只顯示休假</label>
            </div>
        </div>
    </div>





    <div class="page-section">
        <div class="row">
            <div class="col-lg-6 mt-4">
                <div class="row">

                    <table class="table table-hover mt-3 text-center">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">部門</th>
                                <th scope="col">工號</th>
                                <th scope="col">姓名</th>
                                <th scope="col">班別</th>
                                <th scope="col">{{searchDate}}</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(data , index) in searchResult" :key="data.eId">
                                <td scope="row" width="50">{{index + 1}}</td>
                                <td>{{data.Branch}}</td>
                                <td>{{data.EId}}</td>
                                <td>{{data.Name}}</td>
                                <td>{{data.Shift}}</td>
                                <td v-if="data.IsLeave">
                                    <span class="hBtn" v-on:click="handleDetail(data.Id)">休假</span>
                                </td>
                                <td v-else-if="data.IsOvertime" class="bg-success">加班</td>
                                <td v-else><span>出勤</span></td>
                            </tr>
                        </tbody>
                    </table>


                    @*<div class="col-12 my-5 py-3">
                            <nav aria-label="Page Navigation">
                                <ul class="pagination justify-content-center">
                                    <li :class="'page-item ' + prevDisabled">
                                        <a class="page-link" tabindex="2" aria-disabled="true">Previous</a>
                                    </li>

                                    <li :class="'page-item ' + p.active"
                                        aria-current="page"
                                        v-for="p in totalPages"
                                        :key="p.index"
                                        >
                                        <a class="page-link" href="#">{{p.index}}</a>
                                    </li>
                                    <li :class="'page-item ' + nextDisabled" >
                                        <a class="page-link">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>*@
                </div>
            </div>
            <div class="col-lg-1 py-3 mt-4">

            </div>
            <div class="col-lg-5 py-3 mt-4">
                <div class="sidebar-block">
                    <h3 class="sidebar-title">
                        人力總覽
                        <span class="badge">{{searchDate}}</span>
                        <button type="button"
                                class="btn btn-outline-danger btn-sm"
                                data-toggle="modal"
                                data-target="#exampleModalCenter1"
                                v-show="releaseOverTimeBtnShow">
                            發佈加班
                        </button>
                        <div class="modal fade" id="exampleModalCenter1" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <p class="modal-title" id="exampleModalLongTitle">{{searchDate}}發佈加班</p>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <table class="modal_table">
                                            <thead>
                                                <tr>
                                                    <th>工號</th>
                                                    <th>姓名</th>
                                                    <th>班別</th>
                                                    <th>#</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr v-for="(emp , index) in canOverTimeEmps" :key="index">
                                                    <td>{{emp.eid}}</td>
                                                    <td>{{emp.name}}</td>
                                                    <td>{{emp.shift}}</td>
                                                    <td>
                                                        <label :for="'check' + index">
                                                            通知
                                                            <input type="checkbox" v-model="emp.check" :id="'check' + index">
                                                        </label>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <hr />
                                        <input type="submit" class="btn btn-sm btn-outline-danger" v-on:click="handleOverTime" value="發佈加班">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </h3>
                    <ul class="categories">
                        <li><a class="bg-success text-light h4">實到<span style="font-size:16px">{{workEmp.length}}人</span></a></li>
                        <li><a class="bg-danger text-light h4">休假<span style="font-size:16px">{{leaveEmp.length}}人</span></a></li>
                    </ul>
                </div>

                <div class="sidebar-block">
                    <div>
                        <label for="searchDate" class="sidebar-title h3">查詢其他日期：</label>
                        <input type="date" id="searchDate" class="btn btn-outline-info" v-model="searchDate" v-on:change="handleSearchDate" />
                    </div>
                    <div>
                        <input class="btn btn-outline-info" value="前一天" v-on:click="handleBtnSearchDate(-1)" />
                        <input class="btn btn-outline-info" value="後一天" v-on:click="handleBtnSearchDate(1)" />
                    </div>
                </div>

                <div class="sidebar-block">
                    <h3 class="sidebar-title h3">搜尋</h3>
                    <div class="input-group mb-3">
                        <div class="dropdown">
                            <input class="btn btn-large btn-info dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false" v-model="searchTitle">
                            <div class="dropdown-menu">
                                <div class="dropdown-item"
                                     v-for="(wait , index) in searchWait"
                                     :key="wait.id"
                                     v-on:click="handleSearchTitle(wait.id)">
                                    {{wait.value}}
                                </div>
                            </div>
                        </div>
                        <input type="text"
                               class="form-control-user w-50"
                               :placeholder="'請輸入' + searchTitle"
                               aria-label="Username"
                               aria-describedby="basic-addon1"
                               v-model="searchValue"
                               v-on:keyup="handleSearchValue">
                    </div>
                </div>

            </div>
        </div>
    </div>















</div>


@section Script{
    <script src="~/Content/assets/vendor/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="~/Content/assets/vendor/wow/wow.min.js"></script>
    <script src="~/Content/assets/js/theme.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
    <script>
        const vm = new Vue({
            el: '#app',
            data: {
                source:[],
                workEmp:[],
                leaveEmp: [],
                canOverTimeEmps: [],
                releaseOverTimeBtnShow: false,
                search: [{ id: 0, value: '工號' }, { id: 1, value: '姓名' }, { id: 2, value: '班別' }, { id: 3, value: '部門' }],
                searchWait:[],
                searchTitle: '姓名',
                searchValue: '',
                searchResult: [],
                searchDate: '',
                radioValue: '',
                totalPages: [],
                currentPage: 1,
                activePage: false,
                prevDisabled: '',
                nextDisabled: '',

            },
            mounted() {
                let source = @Html.Raw(ViewBag.source);
                this.initialData(source);
            },
            methods: {
                initialData(data) {
                    //日期格式化
                    moment.locale('zh-tw');
                    //每次ajax更新後加班列表清空
                    this.canOverTimeEmps = [];
                    //排除可以被列入加班人員
                    this.source = data.filter(item => {
                        //常日班放假依然會有可加班名單,可在在source未被篩選時先儲存目前搜尋的日期,防止searchDate一開始null
                        this.searchDate = moment(item.ViewDate).format('yyyy-MM-DD');
                        return !item.CanOverTime
                    });
                    //加入可以被列入加班人員
                    let overTimeEmps = data.filter(item => item.CanOverTime);
                    //建立可以被列入加班人員物件 (多一個checkbox)
                    overTimeEmps.forEach(emp => {
                        let obj = { eid: emp.EId, name: emp.Name, shift: emp.Shift, date: this.searchDate, check: false };
                        this.canOverTimeEmps.push(obj);
                    })
                    //有加班名單就顯示發布加班btn
                    if (this.canOverTimeEmps.length) {
                        this.releaseOverTimeBtnShow = true;
                    } else {
                        this.releaseOverTimeBtnShow = false;
                    }
                    //搜尋出勤表結果要顯示的人員名單(出勤與休假人員)
                    this.searchResult = [];
                    //出勤人員
                    this.workEmp = [];
                    //休假人員
                    this.leaveEmp = [];
                    this.source.forEach(att => {
                        this.searchResult.push(att);
                        att.IsLeave ? this.leaveEmp.push(att) : this.workEmp.push(att);
                    })
                    //搜尋列的篩選按鈕變化
                    this.searchWait = this.search.filter(s => s.value != this.searchTitle);
                    //ajax更新資料後依然保留目前搜尋的內容
                    this.handleSearchValue();
                    ////分頁功能
                    //for (let i = 1; i <= pages; i++) {
                    //    if (this.currentPage === i) {
                    //        this.totalPages.push({ index: i, active: 'active' });
                    //    }
                    //    else {
                    //        this.totalPages.push({ index: i, active: '' });
                    //    }
                    //}
                    //prevDisabled = '';
                    //nextDisabled = '';
                    //if (this.currentPage == 1) {
                    //    this.prevDisabled = 'disabled';
                    //}
                    //if (this.currentPage == this.totalPages.length) {
                    //    this.nextDisabled = 'disabled';
                    //}

                },
                //變換搜尋條件
                handleSearchTitle(id) {
                    this.searchWait = this.search.filter(s => {
                        if (s.id == id)
                            this.searchTitle = s.value;
                       return s.id != id
                    });
                },
                //搜尋內容
                handleSearchValue() {
                    let kw = this.searchValue;
                    switch (this.searchTitle) {
                        case '工號':
                            this.searchResult = this.source.filter(att => {
                                return att.EId.includes(kw);
                            })
                            break;
                        case '姓名':
                            this.searchResult = this.source.filter(att => {
                                return att.Name.includes(kw);
                            })
                            break;
                        case '班別':
                            this.searchResult = this.source.filter(att => {
                                return att.Shift.includes(kw);
                            })
                            break;
                        case '部門':
                            this.searchResult = this.source.filter(att => {
                                return att.Branch.includes(kw);
                            })
                            break;
                        default:
                            break;
                    }
                    switch (this.radioValue) {
                        case '只顯示出勤':
                            this.searchResult = this.searchResult.filter(att => !att.IsLeave);
                            break;
                        case '只顯示休假':
                            this.searchResult = this.searchResult.filter(att => att.IsLeave);
                            break;
                        default:
                    }
                },
                handleRadio() {
                    switch (this.radioValue) {
                        case '全顯示':
                            this.searchResult = this.source;
                            break;
                        case '只顯示出勤':
                            this.searchResult = this.workEmp;
                            break;
                        case '只顯示休假':
                            this.searchResult = this.leaveEmp;
                            break;
                        default:
                    }
                },
                //請假人員明細
                handleDetail(id) {
                    location.href = '@Url.Action("Record", "Holiday")?id=' + id;
                },
                //切換前一天或後一天
                async handleBtnSearchDate(select) {
                    let date = new Date(this.searchDate);
                    let result = date.setDate(date.getDate() + select);
                    this.searchDate = moment(result).format('yyyy-MM-DD');
                    //計算完日期後呼叫handleSearchDate 索取更新資料
                    await this.handleSearchDate();
                },
                //切換查詢日期
                async handleSearchDate() {
                    let current = '@currentEmp.EId';
                    const myHeaders = new Headers();
                    myHeaders.append('Authorization', `${current}`);
                    let date = new Date(this.searchDate).toLocaleDateString();
                    let url = 'http://localhost:51010/api/apiAttendance?date=' + date;
                    //向後端更新出勤資料
                    let result = await this.searchData(url, myHeaders);

                    if (result.success) {
                        let data = result.attendances;
                        this.initialData(data);
                    } else {
                        eAlert(result.msg);
                    }

                },
                //fetch更新出勤清單
                searchData(url, headers) {
                    return fetch(url, { headers: headers }).then(response => {
                        if (response.ok)
                            return response.json();
                    })
                },
                //發布加班
                handleOverTime() {
                    let checkEmps = this.canOverTimeEmps.filter(emp => emp.check);
                    if (!checkEmps.length) {
                        alert('請先選擇人員');
                        return;
                    }
                    if (confirm('確認發佈加班？')) {
                        fetch('http://localhost:51010/api/apiAttendance', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(checkEmps)
                        }).then(res => {
                            if (res.ok) {
                                return res.json();
                            }
                        }).then(result => {
                            if (result.success) {
                                let date = moment(new Date(result.date)).format('l');
                                sAlert(`已對人員發佈${date}加班需求！`);
                                $(Swal.getConfirmButton()).click(function () {
                                    window.location.href = '@Url.Action("AttendanceDay" , "Schedule")?date=' + date;
                                })
                            }
                            else {
                                location.href = '@Url.Action("Index" , "Home")';
                            }
                        }).catch(error => {
                            console.log(error.msg);
                        })
                    } else {
                       return
                    }
                }
            },
        })

    </script>
}

@section Style{
    <link href="~/Content/assets/css/maicons.css" rel="stylesheet" />
    @*<link href="~/Content/assets/css/bootstrap.css" rel="stylesheet" />*@
    <link href="~/Content/assets/vendor/owl-carousel/css/owl.carousel.css" rel="stylesheet" />
    <link href="~/Content/assets/vendor/animate/animate.css" rel="stylesheet" />
    <link href="~/Content/assets/css/theme.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css" />

    <style>
        td {
            width: 100px;
        }

        #app {
            position: relative;
        }

        .back {
            position: absolute;
            top: 0;
            left: 0;
        }

        .navbar-nav {
            margin-top: 0px;
            border-top: initial;
            flex-shrink: 0;
        }

        .titleBackImg {
            background-image: url('../../img/about_.jpg');
        }

        .myHeadImgeBackGround {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .hBtn {
            padding: 10px;
            cursor: pointer;
            color: red;
        }

        .page-section {
            padding-top: 0;
        }

        .modal_table {
            font-size: 16px;
            text-align: center;
        }
    </style>

}

