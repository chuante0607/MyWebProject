@model IEnumerable<UCOMProject.Models.EmployeeViewModel>

@{
    ViewBag.Title = "帳號權限設定";
}

<div id="app">
    <h1 class="text-center">帳號權限設定</h1>
    <div class="row branch">
        <select v-model="selectBranches" multiple>
            <option v-for="b in branches"
                    :key="b.branchId"
                    :value="b.branchId">
                {{b.branch}}
            </option>
        </select>
    </div>
    <div class="row">
        <div class="col-lg-4 col-xl-3 mt-5" v-for="(data , index) in showtEmployees" :key="data.eid">
            <div class="card" style="width: 18rem;">
                <img class="card-img-top img-fluid" style="height:270px" :src="'/img/' + data.image" alt="Card image cap">
                <div class="card-body">
                    <p>到職日:{{formatDate(data.startDate)}}</p>
                    <span class="card-text">{{data.branch}} &nbsp;</span>
                    <span class="card-title">{{data.name}}<small>({{data.englishName}})</small></span>
                    <small class="badge badge-danger">{{data.jobTitle}}</small>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <label class="btn btn-secondary" :for="'acc' + index">
                            帳號開通 :
                            <input type="checkbox" :id="'acc' + index" name="name" v-model="data.allow"/>
                        </label>
                    </li>
                    <li class="list-group-item">
                        <label class="btn btn-secondary" :for="'ma' + index">
                            主管權限 :
                            <input type="checkbox" :id="'ma' + index" name="name" />
                        </label>
                    </li>
                    <li class="list-group-item">
                        <label class="btn btn-secondary" :for="'ad' + index">
                            管理員權限 :
                            <input type="checkbox" :id="'ad' + index" name="name" />
                        </label>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>


@section Script{
    @*<script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>*@
    <script src="~/Content/Multi-Column-Select/Multi-Column-Select.js"></script>
    <script>

    $(() => {
        const years = [2016, 2017, 2016, 2019, 2019, 2018, 2016];
        const distinctYears = [...new Set(years)];


    //$('input[type="checkbox"]').bootstrapToggle({
    //    on: '開啟',
    //    onstyle: 'success',
    //    off: '關閉',
    //    offstyle: 'danger',
    //})
    //.change(e => {
    //    console.log(e.target.checked);
    //});

    //$('.branch').MultiColumnSelect({
    //    // Single or Multiple Select
    //    multiple: false,
    //    // Use text from option. Use false if you plan to use images
    //    useOptionText: true,
    //    // Hide Original Select Control
    //    hideselect: true,
    //    // Toggle Open Button Class
    //    openmenuClass: 'mcs-open',
    //    // Text for button
    //    openmenuText: '選擇部門',
    //    // Class added to Toggle button on open
    //    openclass: 'open',
    //    // Class of parent container
    //    containerClass: 'mcs-container',
    //    // Class of menu items
    //    itemClass: 'mcs-item',
    //    // Assign as ID to items eg 'item-' = #item-1, #item-2, #item-3...
    //    idprefix: null,
    //    // Toggle Height duration
    //    duration: 200,
    //    //Callbacks
    //    onOpen: null,
    //    onClose: null,
    //    onItemSelect: function () {
    //        let branch = $(this)[0].getAttribute('data');
    //        vm.handleBranch(branch);
    //    },
    //})

})
    const vm = new Vue({
        el: '#app',
        data: {
            source:@Html.Raw(ViewBag.Source),
            showtEmployees:[],
            selectBranches: [],
            branches: [],
            acc: [{eid:'',allow:false}],
        },
        mounted() {
            //setting branches
            this.branches.push({ branchId: 0, branch:'全部' })
            this.source.forEach(item => {
                this.showtEmployees.push(item);
                this.branches.push({ branchId: item.branchId, branch: item.branch });
            })
            //過濾重複的branchId項目
            this.branches = this.branches.filter((item, index, self) => {
                //findIndex找陣列物件裡的相同的id回傳物件的index
                const firstIndex = self.findIndex(f => f.branchId === item.branchId);
                //目前index與findIndex相同  回傳true
                return index === firstIndex;
            })
            //排列部門順序(id小至大)
            this.branches.sort((a, b) => a.branchId - b.branchId);
        },
        methods: {
            allowAccount(eid) {
                fetch('@Url.Action("allow", "employee")')
                    .then(res => {
                        return res.json();
                    })
                    .then(result => {
                        console.log(result);
                    })
            },
            formatDate(date) {
                moment.locale('zh-tw');
                return moment(date).format('l');
            },
        },
        watch: {
            selectBranches(newValue, oldValue) {
                fetch('http://localhost:51010/api/EmpList', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(newValue)
                }).then(res => {
                    if (res.ok)
                        return res.json();
                    else
                        throw new Error('請求錯誤', res.status);
                }).then(result => {
                    let self = this;
                    let data = JSON.parse(result);
                    this.showtEmployees = [];
                    setTimeout(function () {
                        data.forEach(item => {
                            self.showtEmployees.push(item);
                        })
                    }, 500)
                }).catch(error => {
                    console.log(error);
                })
            }
        }
    })
    </script>
}

@section Style{
    @*<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">*@
    <link href="~/Content/Multi-Column-Select/Multi-Column-Select.css" rel="stylesheet" />
    <style>
        li[class="list-group-item"] {
            padding: 0px;
            margin: 0px;
        }

            li[class="list-group-item"] label {
                margin: 0;
                border-radius: initial;
                display: flex;
                justify-content: space-around;
                align-items: center;
            }
    </style>
}
